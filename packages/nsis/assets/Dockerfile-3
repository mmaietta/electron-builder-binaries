FROM ubuntu:24.04

# ----------------------
# Install build tools
# ----------------------
RUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y \
    git python3 python3-pip scons mingw-w64 curl unzip make gcc g++ tree \
    && apt-get clean

# ----------------------
# Environment variables
# ----------------------
ENV NSIS_SRC=/opt/nsis-src
ENV NSIS_BUILD=/opt/nsis-win32
ENV NSIS_BUILD64=/opt/nsis-win64
ENV NSIS_BUILD_LINUX=/opt/nsis-linux
ENV ZLIB_W32=/opt/zlib-win32
ENV ZLIB_W64=/opt/zlib-win64

ENV NSIS_MAX_STRLEN=8192
ENV NSIS_CONFIG_LOG=yes
ENV NSIS_CONFIG_CONST_DATA_PATH=no
ENV NSIS_CONFIG_USE_ELEVATE=yes
ENV NSIS_CONSOLE=yes

# ----------------------
# Clone NSIS
# ----------------------
WORKDIR /opt
RUN git clone --branch v311 https://github.com/kichik/nsis.git ${NSIS_SRC}

# ----------------------
# Build zlib for Win32
# ----------------------
WORKDIR /tmp
RUN curl -LO https://zlib.net/zlib-1.3.1.tar.gz && \
    tar xf zlib-1.3.1.tar.gz
WORKDIR /tmp/zlib-1.3.1
RUN mkdir -p ${ZLIB_W32} ${ZLIB_W64}
RUN make distclean || true && \
    make -f win32/Makefile.gcc PREFIX=i686-w64-mingw32- SHARED_MODE=1 \
        BINARY_PATH=${ZLIB_W32}/bin INCLUDE_PATH=${ZLIB_W32}/include LIBRARY_PATH=${ZLIB_W32}/lib install && \
    cp ${ZLIB_W32}/lib/libz.dll.a ${ZLIB_W32}/lib/zlib1.lib

# ----------------------
# Build zlib for Win64
# ----------------------
RUN make distclean || true && \
    make -f win32/Makefile.gcc PREFIX=x86_64-w64-mingw32- SHARED_MODE=1 \
        BINARY_PATH=${ZLIB_W64}/bin INCLUDE_PATH=${ZLIB_W64}/include LIBRARY_PATH=${ZLIB_W64}/lib install && \
    cp ${ZLIB_W64}/lib/libz.dll.a ${ZLIB_W64}/lib/zlib1.lib

# ----------------------
# Build NSIS Win32
# ----------------------
ENV CC=i686-w64-mingw32-gcc
ENV CXX=i686-w64-mingw32-g++
ENV CFLAGS="-I${ZLIB_W32}/include"
ENV CXXFLAGS="-I${ZLIB_W32}/include"
ENV LDFLAGS="-L${ZLIB_W32}/lib -lz"

WORKDIR ${NSIS_SRC}
RUN scons

# ----------------------
# Build NSIS Win64
# ----------------------
ENV CC=x86_64-w64-mingw32-gcc
ENV CXX=x86_64-w64-mingw32-g++
ENV CFLAGS="-I${ZLIB_W64}/include"
ENV CXXFLAGS="-I${ZLIB_W64}/include"
ENV LDFLAGS="-L${ZLIB_W64}/lib -lz"

WORKDIR ${NSIS_SRC}
RUN scons

# ----------------------
# Copy NSIS Win32 artifacts
# ----------------------
RUN mkdir -p ${NSIS_BUILD}/Bin && \
    cp build/urelease/makensis/makensis ${NSIS_BUILD}/Bin/makensis.exe && \
    cp build/urelease/Makensisw/makensisw.exe ${NSIS_BUILD}/Bin/makensisw.exe && \
    cp ${ZLIB_W32}/bin/zlib1.dll ${NSIS_BUILD}/Bin/ && \
    cp -r build/urelease/* ${NSIS_BUILD}/ && \
    # Prune build junk
    find ${NSIS_BUILD} \( -name "*.o" -o -name "*.obj" -o -name "*.map" -o -name "*.ilk" -o -name "*.pdb" -o -name "*.a" \) -delete

# ----------------------
# Copy NSIS Win64 artifacts
# ----------------------
RUN mkdir -p ${NSIS_BUILD64}/Bin && \
    cp build/urelease/makensis/makensis ${NSIS_BUILD64}/Bin/makensis.exe && \
    cp build/urelease/Makensisw/makensisw.exe ${NSIS_BUILD64}/Bin/makensisw.exe && \
    cp ${ZLIB_W64}/bin/zlib1.dll ${NSIS_BUILD64}/Bin/ && \
    cp -r build/urelease/* ${NSIS_BUILD64}/ && \
    # Prune build junk
    find ${NSIS_BUILD64} \( -name "*.o" -o -name "*.obj" -o -name "*.map" -o -name "*.ilk" -o -name "*.pdb" -o -name "*.a" \) -delete

# ----------------------
# Build NSIS Linux makensis
# ----------------------
WORKDIR ${NSIS_SRC}
RUN scons \
         SKIPSTUBS=all \
         SKIPPLUGINS=all \
         MAKENSIS_ONLY=1 \
         SKIPUTILS=all

# ----------------------
# Copy NSIS Linux artifacts
# ----------------------
RUN mkdir -p ${NSIS_BUILD_LINUX}/Bin && \
    cp build/urelease/makensis/makensis ${NSIS_BUILD_LINUX}/Bin/makensis && \
    chmod +x ${NSIS_BUILD_LINUX}/Bin/makensis

# ----------------------
# Bundle all NSIS artifacts
# ----------------------
WORKDIR /out
RUN mkdir -p nsis-bundle/linux nsis-bundle/win32 nsis-bundle/win64 && \
    cp /opt/nsis-linux/makensis nsis-bundle/linux/makensis && \
    cp -r /opt/nsis-win32/* nsis-bundle/win32/ && \
    cp -r /opt/nsis-win64/* nsis-bundle/win64/ && \
    tar -czf nsis-bundle.tar.gz nsis-bundle

# ----------------------
# Verify build structure
# ----------------------
WORKDIR /out/nsis-bundle
CMD ["tree", "-L", "3"]
