name: Build Makensis

on:
  workflow_call:
    outputs:
      artifactNames:
        description: "Comma-separated list of Makensis artifacts from all matrix jobs"
        value: ${{ needs.set-artifact-list.outputs.names }}

jobs:
  build:
    runs-on: ${{ matrix.node }}
    strategy:
      matrix:
        node: [ubuntu-latest, macos-latest]
    outputs:
      artifactName: ${{ steps.set-artifact-name.outputs.name }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
        with: { submodules: true }

      - name: Setup pnpm
        uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda
        with: { version: 9.4.0 }

      - name: Setup Node.js
        uses: actions/setup-node@1d0ff469b7ec7b3cb9d8673fde0c81c44821de2a
        with: { node-version: '22' }

      - name: Install dependencies
        run: pnpm i --frozen-lockfile

      - name: Build Makensis
        run: bash packages/nsis/build.sh
        shell: bash

      - name: Upload Makensis artifact
        uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1
        with:
          name: makensis-artifacts-${{ matrix.node }}
          path: packages/nsis/out
          if-no-files-found: error
          retention-days: 1

      - name: Set artifact name output
        id: set-artifact-name
        run: |
          echo "name=makensis-artifacts-${{ matrix.node }}" >> $GITHUB_OUTPUT

  set-artifact-list:
    runs-on: ubuntu-latest
    needs: build
    outputs:
      names: ${{ steps.set-list.outputs.names }}
    steps:
      - name: Set comma-separated artifact list
        id: set-list
        run: |
          echo "names=$(echo ${{ join(needs.build.*.outputs.artifactName, ',') }})" >> $GITHUB_OUTPUT
          echo "Artifact names: $names"