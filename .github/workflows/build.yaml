name: Build artifacts

on:
  push:
    branches:
      master
  pull_request:
  workflow_dispatch: # Allows you to run this workflow manually from the Actions tab
  workflow_call:
    # Map the workflow outputs to job outputs
    outputs:
      artifactUrl:
        description: "The url of the compressed artifacts"
        value: ${{ jobs.combine-assets.outputs.artifactUrl }}

permissions:
  contents: read

jobs:
  build-linux:
    runs-on: ubuntu-latest
    timeout-minutes: 25
    strategy:
      fail-fast: false
      matrix:
        arch: [arm64v8, amd64, i386, arm32v7]
    steps:
      - name: Set up QEMU dependency
        uses: docker/setup-qemu-action@v3.6.0
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.10.0
      - name: Checkout code repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - name: Build ${{ matrix.arch }}
        run: |
          ARCH=${{ matrix.arch }} bash build-linux.sh
      - name: Archive artifacts
        uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1 # v4
        with:
          name: build-linux-${{ matrix.arch }}
          if-no-files-found: error
          path: |
            out
  
  build-windows:
    runs-on: windows-latest
    timeout-minutes: 15
    steps:
      - name: Checkout code repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - name: Setup pnpm
        uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4.1.0
        with:
          version: 9.4.0
      - name: Setup node
        uses: actions/setup-node@1d0ff469b7ec7b3cb9d8673fde0c81c44821de2a # v4
        with:
          node-version: '22'
      - name: List Windows Kits versions installed
        run: |
          ls "C:\\Program Files (x86)\\Windows Kits"
          ls "C:\\Program Files (x86)\\Windows Kits\\10\\bin"
          ls "C:\\Program Files (x86)\\Windows Kits\\10\\bin\\10.0.26100.0"
      - name: Copy specific Windows Kits assets (makeappx, signtool, etc.)
        shell: bash
        run: |
          rm -rf out
          node scripts/appx.js
          ls -R out
      - name: Archive artifacts
        uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1 # v4
        with:
          name: windows-artifacts
          if-no-files-found: error
          path: |
            out

  build-mac:
    runs-on: macos-latest
    timeout-minutes: 15
    steps:
      - name: Checkout code repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - name: Build
        run: |
          rm -rf out
          bash build-mac.sh
          ls -R out
      - name: Archive artifacts
        uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1 # v4
        with:
          name: mac-artifacts
          if-no-files-found: error
          path: |
            out

  combine-artifacts:
    runs-on: macos-latest
    needs: [
      build-linux,
      build-mac,
      build-windows
    ]
    timeout-minutes: 15
    outputs:
      artifactUrl: ${{ steps.artifact-url.outputs.ARTIFACT_URL }}
      artifactId: ${{ steps.artifact-url.outputs.ARTIFACT_ID }}
    steps:
      - name: Install `tree`
        run: |
          brew install tree
      - name: Checkout code repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - name: Download artifacts
        uses: actions/download-artifact@v4.2.1
        with:
          path: artifacts
          merge-multiple: true
      - name: Tree the out directory
        run: |
          tree ./artifacts
      - name: Compress Artifacts
        run: |
          sh ./scripts/compress-artifacts.sh
      - name: Upload Artifacts
        id: upload-artifacts
        uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1 # v4
        with:
          path: artifacts
          name: merged-artifacts-all
      - name: Extract artifact url
        id: artifact-url
        run: |
          echo "Artifact URL is: ${{ steps.upload-artifacts.outputs.artifact-url }}"
          echo "ARTIFACT_URL=${{ steps.upload-artifacts.outputs.artifact-url }}" >> $GITHUB_ENV
          echo "ARTIFACT_ID=${{ steps.upload-artifacts.outputs.artifact-id }}" >> $GITHUB_ENV
