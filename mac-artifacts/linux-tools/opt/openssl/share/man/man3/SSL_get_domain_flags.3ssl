.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.42)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "SSL_CTX_SET_DOMAIN_FLAGS 3ssl"
.TH SSL_CTX_SET_DOMAIN_FLAGS 3ssl "2025-04-08" "3.5.0" "OpenSSL"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
SSL_CTX_set_domain_flags, SSL_CTX_get_domain_flags, SSL_get_domain_flags,
SSL_DOMAIN_FLAG_SINGLE_THREAD,
SSL_DOMAIN_FLAG_MULTI_THREAD,
SSL_DOMAIN_FLAG_THREAD_ASSISTED,
SSL_DOMAIN_FLAG_BLOCKING,
SSL_DOMAIN_FLAG_LEGACY_BLOCKING
\&\- control the concurrency model used by a QUIC domain
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\& #include <openssl/ssl.h>
\&
\& #define SSL_DOMAIN_FLAG_SINGLE_THREAD
\& #define SSL_DOMAIN_FLAG_MULTI_THREAD
\& #define SSL_DOMAIN_FLAG_LEGACY_BLOCKING
\& #define SSL_DOMAIN_FLAG_BLOCKING
\& #define SSL_DOMAIN_FLAG_THREAD_ASSISTED
\&
\& int SSL_CTX_set_domain_flags(SSL_CTX *ctx, uint64_t flags);
\& int SSL_CTX_get_domain_flags(SSL_CTX *ctx, uint64_t *flags);
\&
\& int SSL_get_domain_flags(SSL *ssl, uint64_t *flags);
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\fBSSL_CTX_set_domain_flags()\fR and \fBSSL_CTX_get_domain_flags()\fR set and get the \s-1QUIC\s0
domain flags on a \fB\s-1SSL_CTX\s0\fR using a \s-1QUIC\s0 \fB\s-1SSL_METHOD\s0\fR. These flags determine
the concurrency model which is used for a \s-1QUIC\s0 domain. A detailed introduction
to these concepts can be found in \fBopenssl\-quic\-concurrency\fR\|(7).
.PP
Applications may use either one the flags here:
.IP "\fB\s-1SSL_DOMAIN_FLAG_SINGLE_THREAD\s0\fR" 4
.IX Item "SSL_DOMAIN_FLAG_SINGLE_THREAD"
Specifying this flag configures the Single-Threaded Concurrency Model (\s-1SCM\s0).
.IP "\fB\s-1SSL_DOMAIN_FLAG_MULTI_THREAD\s0\fR" 4
.IX Item "SSL_DOMAIN_FLAG_MULTI_THREAD"
Speciyfing this flag configures the Contentive Concurrency Model (\s-1CCM\s0) (unless
\&\fB\s-1SSL_DOMAIN_FLAG_THREAD_ASSISTED\s0\fR is also specified).
.Sp
If OpenSSL was built without thread support, this is identical to
\&\fB\s-1SSL_DOMAIN_FLAG_SINGLE_THREAD\s0\fR.
.IP "\fB\s-1SSL_DOMAIN_FLAG_THREAD_ASSISTED\s0\fR" 4
.IX Item "SSL_DOMAIN_FLAG_THREAD_ASSISTED"
Specifying this flag configures the Thread-Assisted Concurrency Model (\s-1TACM\s0).
It implies \fB\s-1SSL_DOMAIN_FLAG_MULTI_THREAD\s0\fR and \fB\s-1SSL_DOMAIN_FLAG_BLOCKING\s0\fR.
.Sp
This concurrency model is not available if OpenSSL was built without thread
support, in which case attempting to configure it will result in an error.
.IP "\fB\s-1SSL_DOMAIN_FLAG_BLOCKING\s0\fR" 4
.IX Item "SSL_DOMAIN_FLAG_BLOCKING"
Enable reliable support for blocking I/O calls, allocating whatever \s-1OS\s0 resources
are necessary to realise this. If this flag is specified,
\&\fB\s-1SSL_DOMAIN_FLAG_LEGACY_BLOCKING\s0\fR is ignored.
.IP "\fB\s-1SSL_DOMAIN_FLAG_LEGACY_BLOCKING\s0\fR" 4
.IX Item "SSL_DOMAIN_FLAG_LEGACY_BLOCKING"
Enables legacy blocking compatibility mode. See
\&\*(L"Legacy Blocking Support Compatibility\*(R" in \fBopenssl\-quic\-concurrency\fR\|(7).
.PP
Mutually exclusive flag combinations result in an error (for example, combining
\&\fB\s-1SSL_DOMAIN_FLAG_SINGLE_THREAD\s0\fR and \fB\s-1SSL_DOMAIN_FLAG_MULTI_THREADED\s0\fR).
.PP
Because exactly one concurrency model must be chosen, the domain flags cannot be
set to 0 and attempting to do so will result in an error.
.PP
Changing these flags using \fBSSL_CTX_set_domain_flags()\fR has no effect on \s-1QUIC\s0
domains which have already been created.
.PP
The default set of domain flags set on a newly created \fB\s-1SSL_CTX\s0\fR may vary by
OpenSSL version, chosen \fB\s-1SSL_METHOD\s0\fR, and operating environment. See
\&\fBopenssl\-quic\-concurrency\fR\|(7) for details. An application can retrieve the
default domain flags by calling \fBSSL_CTX_get_domain_flags()\fR immediately after
constructing a \fB\s-1SSL_CTX\s0\fR.
.PP
\&\fBSSL_get_domain_flags()\fR retrieves the domain flags which are effective for a \s-1QUIC\s0
domain when called on any \s-1QUIC SSL\s0 object under that domain.
.SH "RETURN VALUES"
.IX Header "RETURN VALUES"
\&\fBSSL_CTX_set_domain_flags()\fR, \fBSSL_CTX_get_domain_flags()\fR and
\&\fBSSL_get_domain_flags()\fR return 1 on success and 0 on failure.
.PP
\&\fBSSL_CTX_set_domain_flags()\fR fails if called with a set of flags which are
inconsistent or which cannot be supported given the current environment.
.PP
\&\fBSSL_CTX_set_domain_flags()\fR and \fBSSL_CTX_get_domain_flags()\fR fail if called on a
\&\fB\s-1SSL_CTX\s0\fR which is not using a \s-1QUIC\s0 \fB\s-1SSL_METHOD\s0\fR.
.PP
\&\fBSSL_get_domain_flags()\fR fails if called on a non-QUIC \s-1SSL\s0 object.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fBSSL_new_domain\fR\|(3), \fBopenssl\-quic\-concurrency\fR\|(7)
.SH "HISTORY"
.IX Header "HISTORY"
These functions were added in \f(CW@QUIC_SERVER_VERSION\fR@.
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright 2024\-2025 The OpenSSL Project Authors. All Rights Reserved.
.PP
Licensed under the Apache License 2.0 (the \*(L"License\*(R").  You may not use
this file except in compliance with the License.  You can obtain a copy
in the file \s-1LICENSE\s0 in the source distribution or at
<https://www.openssl.org/source/license.html>.
